// =======================
// Main Entity: Scooter
// =======================
class Scooter {
  String id;                // Unique identifier for each scooter
  Integer batteryLevel;      // Battery percentage
  String currentLocation;    // Could be GPS coordinates or address
  String qrCode;             // QR code used for unlocking

  // Each scooter has exactly one current status
  1 -> 1 ScooterStatus status;

  // Each scooter is parked in exactly one zone
  1 -> 0..1 ParkingZone zone;

  // A scooter can be involved in many trips over time
  1 -> * Trip trips;
}

// =======================
// Scooter Status State Machine
// =======================
class ScooterStatus {
  String lastUpdated;

  statusType {
    Available,
    InUse,
    Charging,
    OutOfService
  }
}

// =======================
// Parking Zone
// =======================
class ParkingZone {
  String id;            // Unique ID for the parking zone
  String name;          // Name or description
  String location;      // GPS coordinates or address
}

// =======================
// Users and Roles
// =======================
class User {
  String name;
  String email;
  String phone;

  // Optional physical key card for unlocking scooters
  0..1 -> 1 PhysicalKeyCard keyCard;

  // A user can take many trips
  1 -> * Trip trips;

  // A user can have many payment transactions over time
  1 -> * PaymentTransaction payments;

  // A user interacts with the system through the Mobile App
  1 -> 1 MobileApp app;
}

class PhysicalKeyCard {
  String cardId;   // Unique card identifier
  Date issueDate;
}

class MaintenanceStaff {
  // Staff can move scooters between parking zones or perform repairs
  * -> * Scooter managedScooters;

  // Staff also use the Mobile App for diagnostics and relocation tasks
  1 -> 1 MobileApp app;
}

class Administrator {
  // Administrators oversee all scooters in the system
  * -> * Scooter overseenScooters;

  // Admins also use the Mobile App for monitoring and oversight
  1 -> 1 MobileApp app;
}

// =======================
// Trip
// =======================
class Trip {
  String startLocation;
  String endLocation;
  Integer duration;  // In minutes
  Double cost;

  // A trip is always linked to exactly one scooter
  1 -> 1 Scooter scooter;

  // A trip belongs to exactly one user
  1 -> 1 User user;

  // A trip generates one payment transaction
  1 -> 1 PaymentTransaction payment;
}

// =======================
// Payment and Invoices
// =======================
class PaymentTransaction {
  String transactionId;
  Date timestamp;
  Double amount;
  String paymentMethod; // e.g., Credit Card, PayPal

  // A payment has exactly one invoice
  1 -> 1 Invoice invoice;
}

class Invoice {
  String invoiceNumber;
  Date issuedDate;
  String billingDetails;
}

// =======================
// External System: Google Maps
// =======================
class GoogleMaps {
  String apiKey;

  // The system uses Google Maps to fetch data
  0..1 -> * Scooter scooters;
  0..1 -> * ParkingZone zones;
  0..1 -> * MobileApp apps;
}

// =======================
// Mobile Application
// =======================
class MobileApp {
  String appVersion;
  String platform; // iOS / Android
  String pushNotificationToken;

  // Mobile app enables users to book and unlock scooters
  * -> * User users;

  // Mobile app interacts with Google Maps for navigation
  1 -> 1 GoogleMaps maps;

  // Mobile app enables payment processing
  1 -> * PaymentTransaction transactions;
}
